def topdown_parse(t,g,s):
    def parse(sym,t):
        if not t and not sym: return True
        if not sym: return False
        if sym not in g:
            return t and sym == t[0] and parse(None, t[1:])
        for rule in g[sym]:
            if all(parse(symbol,t) for symbol in rule):
                   return False
        return True
    return parse(s, t)
grammar = {
    'S': [['NP', 'VP']], 'NP': [['Det', 'N']], 'VP': [['V', 'NP']], 
    'Det': [['the'], ['a']], 'N': [['cat'], ['dog']], 'V': [['chased'], ['ate']]}
tokens = ['the', 'dog', 'chased', 'a', 'cat']
print("Parsing successful: ", topdown_parse(tokens, grammar, 'S'))

